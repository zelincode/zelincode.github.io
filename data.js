(function () {
    var content = [{"context":[{"title":"介绍","link":"/index.html"}],"content":"\n        <h1 id=\"前言\">\n            <a href='#前言' class='header-anchor'>#</a>\n            <span>前言</span>\n        </h1>\n    <hr>\n\n        <h1 id=\"阅读导航\">\n            <a href='#阅读导航' class='header-anchor'>#</a>\n            <span>阅读导航</span>\n        </h1>\n    <hr>\n<ul>\n<li>如果你是使用手机预览，请点击左上角的菜单图标展开文档的菜单。</li>\n<li>如果你是想来查找手册的，请指教点击左上角的搜索框进行搜索。</li>\n<li>如果你想系统的学习，请移步官方文档，仅作为个人笔记总结。</li>\n<li>如果有疑问请在下方留言区留言或者加我的QQ/微信交流。</li>\n</ul>\n\n        <h1 id=\"写在前面的话\">\n            <a href='#写在前面的话' class='header-anchor'>#</a>\n            <span>写在前面的话</span>\n        </h1>\n    <hr>\n<p>各位 <strong>炼丹师</strong>、<strong>金融大鳄</strong>、<strong>数据游侠</strong> 你们好，人生苦短，我们都要用 Python！</p>\n<p>这里是我的个人笔记网站，本网站<code>支持手机预览</code>，<code>支持手机预览</code>，<code>支持手机预览</code>(其实并不需要下载pdf)，手机预览方便大家随时随地学习，重要的事情要说三遍，请将网址收藏起来。</p>\n\n        <h1 id=\"项目信息\">\n            <a href='#项目信息' class='header-anchor'>#</a>\n            <span>项目信息</span>\n        </h1>\n    <hr>\n<ul>\n<li>github地址：<a href=\"https://github.com/zelincode\">https://github.com/zelincode</a></li>\n<li>域名访问：<a href=\"https://www.lichtr.cn/\">https://www.lichtr.cn</a></li>\n</ul>\n\n        <h1 id=\"交流方式\">\n            <a href='#交流方式' class='header-anchor'>#</a>\n            <span>交流方式</span>\n        </h1>\n    <hr>\n<p>个人微信：Lichtr</p>\n<p>联系邮箱：<a href=\"mailto:lichtr@nuaa.edu.cn\">lichtr@nuaa.edu.cn</a></p>\n\n        <h1 id=\"文档生成\">\n            <a href='#文档生成' class='header-anchor'>#</a>\n            <span>文档生成</span>\n        </h1>\n    <hr>\n<p>本文档自豪的使用 <a href=\"https://github.com/teadocs/teadocs\">Teadocs</a> 文档生成工具生成。</p>\n\n        <h1 id=\"版权信息\">\n            <a href='#版权信息' class='header-anchor'>#</a>\n            <span>版权信息</span>\n        </h1>\n    <hr>\n<p>除非额外说明，本网站的所有公开文档均遵循 <a href=\"https://creativecommons.org/licenses/by-nc-sa/3.0/cn/\">署名-非商业性使用-相同方式共享 3.0 中国大陆 (CC BY-NC-SA 3.0 CN)</a> 许可协议。任何人都可以自由地分享、修改本作品，但必须遵循如下条件：</p>\n<ul>\n<li>署名：必须提到原作者，提供指向此许可协议的链接，表明是否有做修改</li>\n<li>非商业性使用：不能对本作品进行任何形式的商业性使用</li>\n<li>相同方式共享：若对本作品进行了修改，必须以相同的许可协议共享</li>\n</ul>\n"},{"context":[{"title":"Java","link":"javascript:void(0)"},{"title":"Java环境配置","link":"/java/java01.html"}],"content":"<p>[TOC]</p>\n\n        <h2 id=\"环境配置\">\n            <a href='#环境配置' class='header-anchor'>#</a>\n            <span>环境配置</span>\n        </h2>\n    \n        <h3 id=\"maven对应jdk\">\n            <a href='#maven对应jdk' class='header-anchor'>#</a>\n            <span>maven对应jdk</span>\n        </h3>\n    <p><img src=\"https://img-blog.csdn.net/20160218194045423?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"img\"></p>\n\n        <h3 id=\"JDK和JRE的区别\">\n            <a href='#JDK和JRE的区别' class='header-anchor'>#</a>\n            <span>JDK和JRE的区别</span>\n        </h3>\n    <p> JDK，开发java程序用的开发包，JDK里面有java的运行环境(JRE)，包括client和server端的。需要配置环境变量。。。。</p>\n<p>JRE，运行java程序的环境，JVM，JRE里面只有client运行环境，安装过程中，会自动添加PATH。</p>\n\n        <h3 id=\"maven项目中的groupid和artifactId\">\n            <a href='#maven项目中的groupid和artifactId' class='header-anchor'>#</a>\n            <span>maven项目中的groupid和artifactId</span>\n        </h3>\n    <p>groupid和artifactId被统称为“坐标”是为了保证项目唯一性而提出的，如果你要把你项目弄到maven本地仓库去，你想要找到你的项目就必须根据这两个id去查找。<br>　　groupId一般分为多个段，这里我只说两段，第一段为域，第二段为公司名称。域又分为org、com、cn等等许多，其中org为非营利组织，com为商业组织。举个apache公司的tomcat项目例子：这个项目的groupId是org.apache，它的域是org（因为tomcat是非营利项目），公司名称是apache，artigactId是tomcat。</p>\n\n        <h2 id=\"基础知识：\">\n            <a href='#基础知识：' class='header-anchor'>#</a>\n            <span>基础知识：</span>\n        </h2>\n    \n        <h3 id=\"四大引用类型\">\n            <a href='#四大引用类型' class='header-anchor'>#</a>\n            <span>四大引用类型</span>\n        </h3>\n    <p><img src=\"C:\\Users\\weizelin\\AppData\\Roaming\\Typora\\typora-user-images\\1562980541860.png\" alt=\"1562980541860\"></p>\n\n        <h3 id=\"强制类型转换：\">\n            <a href='#强制类型转换：' class='header-anchor'>#</a>\n            <span>强制类型转换：</span>\n        </h3>\n    <p><img src=\"C:\\Users\\weizelin\\AppData\\Roaming\\Typora\\typora-user-images\\1562980549594.png\" alt=\"1562980549594\"></p>\n<p>小数默认类型是double，想要转换需要在小数后面加上f或者F的后缀才能转换为float类型</p>\n\n        <h3 id=\"方法的调用：\">\n            <a href='#方法的调用：' class='header-anchor'>#</a>\n            <span><strong>方法的调用</strong>：</span>\n        </h3>\n    <ol>\n<li>静态方法的调用：类名.方法名|属性名</li>\n<li>非静态方法的调用：对象名.方法名|属性名（需要实例化）</li>\n</ol>\n<p>注意：类中的静态方法不能访问非静态成员</p>\n\n        <h3 id=\"构造器：（构造函数）\">\n            <a href='#构造器：（构造函数）' class='header-anchor'>#</a>\n            <span><strong>构造器</strong>：（构造函数）</span>\n        </h3>\n    <ol>\n<li>每个类都有一个无参的构造器；</li>\n<li>构造器名必须和类名相同；</li>\n<li>构造器没有返回值</li>\n</ol>\n<p>（通过new<strong>关键词来调用构造器</strong>）</p>\n\n        <h3 id=\"switch的作用类型\">\n            <a href='#switch的作用类型' class='header-anchor'>#</a>\n            <span>switch的作用类型</span>\n        </h3>\n    <p><strong>switch</strong> <strong>可作用于char byte short int switch</strong></p>\n<p><strong>可作用于char byte short int对应的包装类</strong></p>\n<p><strong>switch不可作用于long double float boolean</strong></p>\n"},{"context":[{"title":"Java","link":"javascript:void(0)"},{"title":"Java基础语法","link":"/java/java02.html"}],"content":"<p>[TOC]</p>\n\n        <h2 id=\"对象\">\n            <a href='#对象' class='header-anchor'>#</a>\n            <span>对象</span>\n        </h2>\n    <p>tips：alt+上下箭头行快速移动</p>\n<pre class=\"prettyprint language-java\"><code>public Animal(){        //调用另一个构造器必须放在第一行\n    this(&quot;Tom&quot;);        //调用有参的构造器\n}\npublic Animal(String name){\n    //\n}</code></pre>\n        <h2 id=\"方法详解\">\n            <a href='#方法详解' class='header-anchor'>#</a>\n            <span>方法详解</span>\n        </h2>\n    \n        <h3 id=\"static\">\n            <a href='#static' class='header-anchor'>#</a>\n            <span>static</span>\n        </h3>\n    <pre class=\"prettyprint\"><code>-使用static修饰的方法属于一个类，或者说属于该类的所有实例所共有。\n\n  --使用static修饰的方法既可以使用类作为调用者来调用，也可以使用该类的对象作为调用者来调用【使用static修饰的方法是属于这个类】。因此使用该类的任何对象来调用这个方法将会得到相同的执行结果，与使用类作为调用者的执行结果完全相同。\n  -- 不使用static修饰的方法属于该类的对象，不属于这个类。因此不使用static的方法只能用类的对象作为调用者调用。使用不同对象作为调用者调用同一个普通方法可能得到不同的结果。\n</code></pre><p><strong>注意</strong>：</p>\n<ol>\n<li>静态变量和类的生命周期相同</li>\n<li>this不能用于静态方法 （静态方法存在时不一定存在对象）</li>\n<li>被所有对象所共享，可直接被类名所调用</li>\n<li>主函数必须是静态的</li>\n<li>静态方法只能访问静态成员（属性和方法），被所有对象所共享，可以通过类名直接调用</li>\n<li>静态变量使用的是同一个命名空间注意被覆盖；</li>\n</ol>\n<pre class=\"prettyprint language-java\"><code>// 对象的回收\nAnimal animal = new Animal();\nanimal = Null;//随后会被垃圾回收机制所清空</code></pre>\n        <h3 id=\"形参长度可变的函数\">\n            <a href='#形参长度可变的函数' class='header-anchor'>#</a>\n            <span>形参长度可变的函数</span>\n        </h3>\n    <pre class=\"prettyprint language-java\"><code>public static void test(int age,String ... names){\n    for(String i : names)\n        System.out.println(i);    \n}</code></pre>\n        <h3 id=\"重载——两同一不同\">\n            <a href='#重载——两同一不同' class='header-anchor'>#</a>\n            <span>重载——两同一不同</span>\n        </h3>\n    <p>在同一个类中，函数名相同；</p>\n<p>方法参数不同</p>\n<p>方法重载和其他因素没有任何关系</p>\n\n        <h2 id=\"变量\">\n            <a href='#变量' class='header-anchor'>#</a>\n            <span>变量</span>\n        </h2>\n    <p><img src=\"C:\\Users\\weizelin\\AppData\\Roaming\\Typora\\typora-user-images\\1562987622145.png\" alt=\"1562987622145\"></p>\n<pre class=\"prettyprint language-java\"><code>public class Demo{\n    String name;     //实例成员变量，随对象产生销毁\n    static int age; //类成员变量，随类产生销毁\n\n    //成员变量无需显示初始化，除此之外所有的局部变量必须初始化\n\n    /**\n    *        a为形参局部变量，作用域为该方法，传参时实例化\n    *        b为方法局部变量，作用域为该变量定义位置起到方法结束，在使用之前实例化\n    *        a1为代码块局部变量，作用域为该定量编译位置起到代码块结束，在使用之前实例化\n    */\n    public void test(int a){    \n        double b;\n        for(int i = 0;i&amp;lt;10;i++)\n            //\n        {\n            int a1 = 10;\n        }\n    }\n}</code></pre><p>局部变量和成员变量可以重名，默认输出为局部变量，若要使用成员变量，可以使用this.</p>\n\n        <h3 id=\"规则\">\n            <a href='#规则' class='header-anchor'>#</a>\n            <span>规则</span>\n        </h3>\n    <ol>\n<li>尽量使用局部变量</li>\n<li>尽可能缩小局部变量的作用范围</li>\n</ol>\n\n        <h2 id=\"封装\">\n            <a href='#封装' class='header-anchor'>#</a>\n            <span>封装</span>\n        </h2>\n    <p>面向对象三大特征：封装、继承、多态</p>\n<p><img src=\"C:\\Users\\weizelin\\AppData\\Roaming\\Typora\\typora-user-images\\1562988721640.png\" alt=\"1562988721640\"></p>\n<pre class=\"prettyprint language-html\"><code>•private：private修饰的类中的成员（包括属性和方法）**只能在该类的内部被访问**。private最适合用于修饰属性，使属性隐藏在类的内部，类的外部不能直接该类的属性及方法。\n\n•default（包访问控制权限）：如果类中的一个成员（属性和方法）或者一个顶级类不使用任何访问控制符修饰，就称它是默认访问控制，default访问控制成员可以被相同包下其他类访问。\n\n•protected（子类访问权限）：使用protected修饰的成员（属性和方法）**既可以被同一个包中其它类访问，也可以被不同包中的子类访问。**通常情况下，如果用protected来修饰方法，通常是希望其子类来重写或只允许子类来访问这个方法。\n\n•public（公共访问权限）：**可以****被所有类访问**。不管访问类和被访问类是否处于同一包中，是否具有父子继承关系。</code></pre><p>•public--都可访问(公有)   </p>\n<p>•private--类内可访问（私有）</p>\n<p>•protected--包内和子类可访问（保护）</p>\n<p>•不写(default)--包内可访问 （默认）</p>\n<p>|            | private | default | protected | public |<br>| ---------- | ------- | ------- | --------- | ------ |<br>| 同一个类中 | √       | √       | √         | √      |<br>| 同一个包中 |         | √       | √         | √      |<br>| 子类中     |         |         | √         | √      |<br>| 全局范围内 |         |         |           | √      |</p>\n"},{"context":[{"title":"Java","link":"javascript:void(0)"},{"title":"Java基础","link":"/java/java03.html"}],"content":"<p>[TOC]</p>\n\n        <h2 id=\"package和import\">\n            <a href='#package和import' class='header-anchor'>#</a>\n            <span>package和import</span>\n        </h2>\n    \n        <h2 id=\"Java的常用包\">\n            <a href='#Java的常用包' class='header-anchor'>#</a>\n            <span>Java的常用包</span>\n        </h2>\n    <p>java.lang包包含了Java语言的核心类，使用这个包的类无需使用import语句导入</p>\n\n        <h2 id=\"JavaBean规范\">\n            <a href='#JavaBean规范' class='header-anchor'>#</a>\n            <span>JavaBean规范</span>\n        </h2>\n    <p>•<strong>JavaBean ** **推荐的命名规范</strong></p>\n<p>​    •<strong>类名要首字母大写，后面的单词首字母大写</strong></p>\n<p>​    •<strong>方法名的第一个单词小写，后面的单词首字母大写</strong></p>\n<p>​    •<strong>变量名的第一个单词小写，后面的单词首字母大写</strong></p>\n\n        <h2 id=\"继承\">\n            <a href='#继承' class='header-anchor'>#</a>\n            <span>继承</span>\n        </h2>\n    \n        <h3 id=\"类的继承（extends）\">\n            <a href='#类的继承（extends）' class='header-anchor'>#</a>\n            <span>类的继承（extends）</span>\n        </h3>\n    <p>子类获得所有父类非私有的属性和方法，Java的继承具有单继承的特点，但Java类可以有很多个间接父类。</p>\n<p>父类的private属性子类不能访问</p>\n<p>default是默认的包访问权限，任何和该类处于同一个包的类都能访问</p>\n<p>protected必须是同出一一个包中的子类才能访问</p>\n\n        <h3 id=\"方法的重写和重载\">\n            <a href='#方法的重写和重载' class='header-anchor'>#</a>\n            <span>方法的重写和重载</span>\n        </h3>\n    <p>重写——两同两小一大</p>\n<p>两同：方法名，形参列表</p>\n<p>两小：子类返回类型应比父类返回类型更小或相等，抛出的异常应比父类方法声明抛出的异常更小或相等</p>\n<p>一大：子类方法的访问权限应比父类方法更大或相等</p>\n\n        <h2 id=\"Super\">\n            <a href='#Super' class='header-anchor'>#</a>\n            <span>Super</span>\n        </h2>\n    <p>用于调用父类中被子类覆盖的方法</p>\n<p>super()运行父类的构造器，默认隐藏</p>\n<p>java中所有的类都直接或间接得继承Object类</p>\n\n        <h3 id=\"注意点\">\n            <a href='#注意点' class='header-anchor'>#</a>\n            <span>注意点</span>\n        </h3>\n    <p>如果不想被子类方法重写，就将父类方法改成final修饰</p>\n\n        <h2 id=\"多态\">\n            <a href='#多态' class='header-anchor'>#</a>\n            <span>多态</span>\n        </h2>\n    \n        <h3 id=\"基础\">\n            <a href='#基础' class='header-anchor'>#</a>\n            <span>基础</span>\n        </h3>\n    <p>java引用变量有两个类型，一个是编译时的类型，一个是运行时的类型，如果编译时类型和运行时类型不一致，就会出现多态。</p>\n<p>多态的三个条件：</p>\n<ol>\n<li>继承</li>\n<li>重写</li>\n<li>父类引用指向子类对象（强制类型转化，向上转型）向下转型报错只能强制转化</li>\n</ol>\n<p>Instanceof </p>\n\n        <h2 id=\"单例类\">\n            <a href='#单例类' class='header-anchor'>#</a>\n            <span>单例类</span>\n        </h2>\n    <pre class=\"prettyprint language-java\"><code>public class Student{\n    private static Student s = new Student();\n    private Student(){}\n    public static Student getInstance(){\n        return s;\n    }\n}    //饿汉式单例        耗内存</code></pre><pre class=\"prettyprint language-java\"><code>public class Teacher{\n    private static teacher = null;\n    private Teacher(){}\n    public static synchronized Teacher getInstance(){\n        synchronized(Teacher.class){\n            if(teacher == null)\n            return teacher = new Teacher();\n        else\n            return teacher;\n        }  \n    }\n}    //懒汉式单例        存在线程安全问题</code></pre>"},{"context":[{"title":"MySQL","link":"javascript:void(0)"},{"title":"MySQL安装概述","link":"/mysql/1.html"}],"content":"<p>[TOC]</p>\n\n        <h2 id=\"MySQL概述\">\n            <a href='#MySQL概述' class='header-anchor'>#</a>\n            <span>MySQL概述</span>\n        </h2>\n    \n        <h3 id=\"基本概念\">\n            <a href='#基本概念' class='header-anchor'>#</a>\n            <span>基本概念</span>\n        </h3>\n    <p>关系型数据库，被Oracle公司收购</p>\n<p>SQL——Structure Query Language</p>\n<p>DBMS——Database Mangement System</p>\n\n        <h3 id=\"SQL语言分类和基础\">\n            <a href='#SQL语言分类和基础' class='header-anchor'>#</a>\n            <span>SQL语言分类和基础</span>\n        </h3>\n    <ol>\n<li>\n        <h4 id=\"DML（Data-Mainipulation-language)数据操纵数据，增删改查\">\n            <a href='#DML（Data-Mainipulation-language)数据操纵数据，增删改查' class='header-anchor'>#</a>\n            <span>DML（Data Mainipulation language)数据操纵数据，增删改查</span>\n        </h4>\n    <ul>\n<li>INSERT</li>\n<li>DELETE</li>\n<li>UPDATE</li>\n<li><strong>SELECT</strong></li>\n</ul>\n</li>\n<li>\n        <h4 id=\"DDL（Data-Definition-language)数据定义语言，用于库和表的创建、修改、删除\">\n            <a href='#DDL（Data-Definition-language)数据定义语言，用于库和表的创建、修改、删除' class='header-anchor'>#</a>\n            <span>DDL（Data Definition language)数据定义语言，用于库和表的创建、修改、删除</span>\n        </h4>\n    <ul>\n<li><strong>CREATE TABLE</strong></li>\n<li><strong>ALTER TABLE</strong>(更改表结构、添加、删除、修改列长度)</li>\n<li><strong>DROP TABLE</strong></li>\n<li>CREATE INDEX（在表上建立索引）</li>\n<li>DROP INDEX（删除索引）</li>\n</ul>\n</li>\n<li>\n        <h4 id=\"DCL（Data-Control-language):数据控制语句，用于定义用户的访问权限和安全级别\">\n            <a href='#DCL（Data-Control-language):数据控制语句，用于定义用户的访问权限和安全级别' class='header-anchor'>#</a>\n            <span>DCL（Data Control language):数据控制语句，用于定义用户的访问权限和安全级别</span>\n        </h4>\n    <ul>\n<li>GRANT（授予访问权限）</li>\n<li>REVOKE(撤销访问权限)</li>\n<li><strong>COMMIT</strong>（提交事务处理）</li>\n<li><strong>ROLLBACK</strong>（事务处理回退）</li>\n<li><strong>SAVAPOINT</strong>（设置保存点）</li>\n<li>LOCK（对数据库的特定部分进行锁定）</li>\n</ul>\n</li>\n</ol>\n\n        <h2 id=\"MySQL安装\">\n            <a href='#MySQL安装' class='header-anchor'>#</a>\n            <span>MySQL安装</span>\n        </h2>\n    <ol>\n<li><p>添加bin目录的环境变量</p>\n</li>\n<li><p>配置my.ini文件（安装目录、数据存放目录、端口等）</p>\n<p>注意：basedir和datadir中的路径是&quot;/&quot;，写成&quot; \\ &quot; 可能引起不必要的错误。</p>\n</li>\n<li><p>打开管理员命令行</p>\n<pre class=\"prettyprint language-mysql\"><code>mysqld install\nmysqld --initialize-insecure --user=mysql    //初始化(可能会需要一些时间，可以查看data文件查看进程运行情况)\nnet start mysql        //启动mysql服务\nmysql (-h 主机名) -u root -p    //进入mysql环境</code></pre></li>\n<li><p>修改root用户密码</p>\n<pre class=\"prettyprint language-mysql\"><code>ALTER USER &#039;root&#039;@&#039;localhost&#039; IDENTIFIED BY &#039;77778888&#039; PASSWORD EXPIRE NEVER;\n\nALTER USER &#039;root&#039;@&#039;localhost&#039; IDENTIFIED WITH mysql_native_password BY &#039;77778888&#039;;\n\nFLUSH PRIVILEGES; </code></pre></li>\n<li><p>启动和停止MySQL服务</p>\n<p>•方式一：通过计算机管理方式</p>\n<p>右击计算机—管理—服务—启动或停止MySQL服务</p>\n<p>•方式二：通过命令行方式 启动：net start mysql服务名 停止：net stop mysql服务名</p>\n</li>\n<li><p>使用navicat连接MySQL</p>\n</li>\n</ol>\n\n        <h2 id=\"MySQL使用\">\n            <a href='#MySQL使用' class='header-anchor'>#</a>\n            <span>MySQL使用</span>\n        </h2>\n    \n        <h3 id=\"使用规范\">\n            <a href='#使用规范' class='header-anchor'>#</a>\n            <span>使用规范</span>\n        </h3>\n    <ul>\n<li>不区分大小写</li>\n<li>单引号和双引号都行</li>\n<li>每句话用;或\\g结尾</li>\n<li>各子句一般分行写</li>\n<li>关键字不能缩写也不能分行</li>\n<li>用缩进提高语句的可读性</li>\n</ul>\n\n        <h3 id=\"主键\">\n            <a href='#主键' class='header-anchor'>#</a>\n            <span>主键</span>\n        </h3>\n    <ol>\n<li>主键不能为空</li>\n<li>主键唯一</li>\n<li>主键设置方式不唯一</li>\n</ol>\n"},{"context":[{"title":"MySQL","link":"javascript:void(0)"},{"title":"MySQL基础","link":"/mysql/2.html"}],"content":"<p>length()求长度</p>\n<p>显示时间 sysdate()</p>\n<p><img src=\"C:\\Users\\weizelin\\AppData\\Roaming\\Typora\\typora-user-images\\1563239127665.png\" alt=\"1563239127665\"></p>\n\n        <h2 id=\"常见的数据类型\">\n            <a href='#常见的数据类型' class='header-anchor'>#</a>\n            <span>常见的数据类型</span>\n        </h2>\n    <pre class=\"prettyprint language-mysql\"><code>drop table if exists t;\n\ncreate table t(id tinyint(10));\n\ninsert into t values (100);\ninsert into t values (-128);\ninsert into t values (128);\ninsert into t values (255);\n\nselect * from t;\n\ndelete from t where id = -128;\n\nalter table t modify id tinyint(10) unsigned;\nalter table t modify id tinyint(10)  zerofill;\n\ncreate table t(id integer(10));\n\ninsert into t values (100);\ninsert into t values (-128);\ninsert into t values (128);\ninsert into t values (255);\n\nalter table t modify id integer(10)  zerofill;\n\ncreate table t(id float(8));\n\ninsert into t values(123);\ninsert into t values(123456);\ninsert into t values(123456789);\ninsert into t values(123456789.123456789);\ninsert into t values(1.23456789);\n\n/*5:总的位数  3：三位小数  2：整数位数*/\ncreate table t(id float(5,3));\n\ninsert into t values(123);\ninsert into t values(123456);\ninsert into t values(123456789);\ninsert into t values(123456789.123456789);\ninsert into t values(1.23456789);\n\ncreate table t(id double(7,3));\n\ninsert into t values(123);\ninsert into t values(123456);\ninsert into t values(123456789);\ninsert into t values(89.123456789123456789123456789);\ninsert into t values(1.23456789123456789123456789123456789);\n\ncreate table t(id double);\n\ninsert into t values(123);\ninsert into t values(123456);\ninsert into t values(123456789);\ninsert into t values(89.123456789123456789123456789);\ninsert into t values(1.23456789123456789123456789123456789);\n\ncreate table t(id decimal(10,3));\n\ninsert into t values(123);\ninsert into t values(123456);\ninsert into t values(123456789);\ninsert into t values(89.123456789123456789123456789);\ninsert into t values(1.23456789123456789123456789123456789);\n\ncreate table t(id int auto_increment primary key,name varchar(32));\n\n/*insert into t(name) values(123);\ninsert into t(name) values(&quot;xiaoming&quot;);\ninsert into t(name) values(&#039;xiao\\&#039;ming&#039;);  \ninsert into t(name) values(&#039;xiao&#039;&#039;ming&#039;);    \ninsert into t(name) values(&quot;xiao&quot;&quot;hong&quot;);  */\n\ncreate table t(id bit(5));\ninsert into t values(4);\ninsert into t values(15);\n\ncreate table t\n    (id int auto_increment primary key,sex enum(&quot;男&quot;,&quot;女&quot;),hobby set(&quot;singing&quot;,&quot;jumping&quot;,&quot;rap&quot;,&quot;basketball&quot;) );\n\n/*enum：1,2,3,4  set:1,2,4,8*/\ninsert into t(sex,hobby) values(&quot;男&quot;,&quot;singing,jumping,rap,basketball&quot;);\ninsert into t(sex,hobby) values(2,15);\n\ncreate table t(sj date);\ninsert into t values(19900101);\ninsert into t values(2019111);\n\n\ncreate table t(sj datetime);\ninsert into t values(19900101001100);\ninsert into t values(20190716);\n\n\ndrop table if exists t;\nselect * from t;\nselect bin(id),hex(id) from t;</code></pre>\n        <h2 id=\"约束和分页\">\n            <a href='#约束和分页' class='header-anchor'>#</a>\n            <span>约束和分页</span>\n        </h2>\n    <p>约束是表级的强制规定</p>\n<pre class=\"prettyprint language-mysql\"><code>\ncreate table t_user(id int primary key auto_increment,name varchar(32) not null,age int );\n\ninsert into t_user(name,age) values(&quot;&quot;,10);\ninsert into t_user(name) values(&quot;Jack&quot;);\n\ncreate table t_user(id int primary key auto_increment,name varchar(32),email varchar(32) unique );\n\ninsert into t_user(name,email) values(&quot;Jerry&quot;,&quot;12345678@qq.com&quot;);\ninsert into t_user(name,email) values(&quot;Tom&quot;,&quot;12345678@qq.com&quot;);\n\n\ncreate table t_user(id int primary key auto_increment,name varchar(32),email varchar(32), unique(name,email) );\ninsert into t_user(name,email) values(&quot;Tom&quot;,&quot;12345678@qq.com&quot;);\ninsert into t_user(name,email) values(&quot;jack&quot;,&quot;12345678@qq.com&quot;);\ninsert into t_user(name,email) values(&quot;Jerry&quot;,&quot;87654321@qq.com&quot;);\ninsert into t_user(name,email) values(&quot;Jerry&quot;,&quot;12345678@qq.com&quot;);  \ninsert into t_user(name,email) values(&quot;Jerry&quot;,&quot;12345678@qq.com&quot;);  \n\ncreate table t_user(id int primary key auto_increment,\n    name varchar(32),email varchar(32),constraint t_user_n_e unique(name,email) );\n\ncreate table t_user(id int ,\n    name varchar(32),email varchar(32),constraint t_user_pk primary key(id,name) );\n\ninsert into t_user(id,name) values(1,&quot;张三&quot;);\ninsert into t_user(id,name) values(1,&quot;李四&quot;);\ninsert into t_user(id,name) values(2,&quot;李四&quot;);\ninsert into t_user(id,name) values(2,&quot;王五&quot;);\ninsert into t_user(id,name) values(2,&quot;王五&quot;);\n\nselect * from t_user;\ndrop table if exists t_user;\n\ndrop table if exists t_student;\ndrop table if exists t_class;\n\ncreate table t_class(cno int(10) primary key,cname varchar(128) not null unique);\n\n/* FK:foreign key(classno) references t_class(cno)    级联删除  级联置空*/\ncreate table t_student(sno int(10) primary key auto_increment,\n    sname varchar(32) not null,classno int(3),foreign key(classno) references t_class(cno) on delete set null );\n\ninsert into t_class(cno,cname) values(100,&#039;北京市海淀区致真大厦&#039;);\ninsert into t_class(cno,cname) values(200,&#039;杭州市江干区晓城天地&#039;);\ninsert into t_student(sname,classno) values(&#039;jack&#039;,100);\ninsert into t_student(sname,classno) values(&#039;lucy&#039;,100);\ninsert into t_student(sname,classno) values(&#039;king&#039;,200);\n\ndelete from t_class where cno = 100;\n\nselect * from t_class;\nselect * from t_student;\n\nselect s.*,c.* from t_student s\ninner join t_class c\non s.classno = c.cno;\n\n/*9：从第几条数据的下一条数据开始取 10：取几条数据*/\nselect * from employees limit 9,10;\nselect * from employees limit 10 offset 9;\n\n/*pageSize :每页显示多少条数据  pageNumber : 页码*/\n/*返回第pageNumber 页 每页条数 为 pageSize的sql语句为:\n  select * from xxx limit (pageNumber-1)*pageSize,pageSize;\n*/\n\n/*返回第5页，每页数据为20条的数据*/\nselect * from employees limit 80,20;</code></pre>"},{"context":[{"title":"MySQL","link":"javascript:void(0)"},{"title":"MySQL进阶","link":"/mysql/3.html"}],"content":"<pre class=\"prettyprint language-mysql\"><code>use nh; /*使用特定的数据库*/\n\nselect * from jobs; /*查询表中所有信息*/\n\nshow tables; /*显示所有的表*/\n\ncreate table jobs(id int,name varchar(32));/*创建一个新的表*/\n    /*创建表时设置主键*/\n    create table jobs(id int,name varchar(32),primary key(id));  /*主键 不能为空  唯一*/\n    /*创建表时设置序列递增*/\n    create table jobs(id int primary key auto_increment,name varchar(32)); \ninsert into jobs(id,name) values(1,&quot;jack&quot;); /*向表中插入信息*/\nupdate jobs set name=&quot;ROSE&quot; where id = 1; /*修改表的内容*/\ndesc jobs;/*查看表的信息*/\n\ndrop table jobs;/*删除表*/\ndelete from jobs where id=2;\n\n</code></pre><p>模糊查询</p>\n<p>排序</p>\n<p>where字句中不能使用别名，也不能使用组函数</p>\n<pre class=\"prettyprint language-mysql\"><code>/*1. 查询工资最低的员工信息: last_name, salary*/\nselect last_name,salary from employees where salary =(select min(salary) from employees);\n\n/*2. 查询平均工资最低的部门信息*/\nselect * from departments \nwhere department_id = (select department_id from employees group by department_id  order by avg(salary) limit 1);\n\n/*3. 查询平均工资最低的部门信息和该部门的平均工资*/\nselect * ,(select avg(salary) from employees where department_id = departments.department_id) from departments \nwhere department_id = (select department_id from employees group by department_id  order by avg(salary) limit 1);\n\n/*4. 查询平均工资最高的 job 信息*/\nselect * from jobs\nwhere job_id =(\n    select job_id from employees\n    group by job_id\n    order by avg(salary) limit 1\n);\n\n/*5. 查询平均工资高于公司平均工资的部门有哪些?*/\nselect department_name from departments\nwhere department_id in(\n    select department_id from employees\n    group by department_id\n    having avg(salary)&amp;gt;(select avg(salary) from employees)\n);\n\n/*6. 查询出公司中所有 manager 的详细信息.*/\nselect * from employees\nwhere employee_id in(select manager_id from employees);\n\n/*7. 各个部门中 最高工资中最低的那个部门的 最低工资是多少*/\nselect min(salary) from employees\nwhere department_id = \n    (select department_id from employees\n    group by department_id \n    order by max(salary) limit 1);\n\n\n/*8. 查询平均工资最高的部门的 manager 的详细信息: last_name, department_id, email, salary*/\nselect last_name,department_id,email,salary from employees\nwhere employee_id in (select manager_id from employees\n    where department_id =\n        (select department_id from employees\n        group by department_id\n        order by avg(salary)desc limit 1)\n);</code></pre><p>mysql数据库<br>字段类型<br>在mysql中包含的数据类型很多，这里主要列出来常用的几种<br>数字：int（整数）,decimal（浮点数）<br>字符串：char（不可改变字符数）,varchar（有限长度，可变字符       数）,text（大文本）<br>日期：datetime<br>布尔：bit<br>            编码问题： gb2312  UTF-8</p>\n<p>约束<br>主键primary key(only 1)<br>非空not null<br>惟一unique<br>默认default<br>外键foreign key<br>查看版本：select version();<br>显示当前时间：select now();<br>注意：在语句结尾要使用分号;<br>远程连接<br>一般在公司开发中，可能会将数据库统一搭建在一台服务器上，所有开发人员共用一个数据库，而不是在自己的电脑中配置一个数据库<br>运行命令<br>mysql -hip地址 -uroot -p<br>-h后面写要连接的主机ip地址<br>-u后面写连接的用户名<br>-p回车后写密码<br>数据库操作<br>查看当前所有数据库<br>show databases;<br>创建数据库<br>create database 数据库名 charset=utf8;<br>删除数据库<br>drop database 数据库名;<br>切换数据库<br>use 数据库名;<br>查看当前选择的数据库<br>select database();<br>表操作<br>查看当前数据库中所有表<br>show tables;<br>创建表<br>auto_increment表示自动增长<br>create table 表名(列及类型);<br>如：<br>create table students(<br>id int auto_increment primary key,<br>sname varchar(10) not null<br>);<br>create table 表名(键 类型 自增 主键 非空)<br>        create table students(<br>        id int auto_increment primary key not null, #主键形式一致<br>        name varchar(10) not null,<br>        birthiday datetime,<br>        gender bit default 1,<br>        isDelet bit default 0<br>        );</p>\n<p>修改表<br>alter table 表名 add|change|drop 列名 类型;<br>如：<br>alter table students add birthday datetime;<br>删除表<br>drop table 表名;<br>查看表结构<br>desc 表名;<br>更改表名称<br>rename table 原表名 to 新表名;<br>查看表的创建语句<br>show create table &#39;表名&#39;;<br>数据操作<br>查询<br>select * from 表名；<br>增加<br>全列插入：insert into 表名 values(...)<br>缺省插入：insert into 表名(列1,...) values(值1,...)<br>同时插入多条数据：insert into 表名 values(...),(...)...;<br>或insert into 表名(列1,...) values(值1,...),(值1,...)...;<br>主键列是自动增长，但是在全列插入时需要占位，通常使用0，插入成功后以实际数据为准<br>修改<br>update 表名 set 列1=值1,... where 条件<br>删除<br>delete from 表名 where 条件<br>逻辑删除，本质就是修改操作update<br>alter table students add isdelete bit default 0;</p>\n<hr>\n\n        <h2 id=\"python连接数据库\">\n            <a href='#python连接数据库' class='header-anchor'>#</a>\n            <span>python连接数据库</span>\n        </h2>\n    <pre class=\"prettyprint language-python\"><code>import pymysql # 连接需要的包\ndb = pymysql.connect(&quot;localhost&quot;,&quot;root&quot;,&quot;77778888&quot;,&quot;scrapy&quot; ) #连接数据库\ncursor = db.cursor() #建立指针\nsql = &quot;&quot;&quot;CREATE TABLE Log (\n         device_id  VARCHAR(50) NOT NULL,\n         os  VARCHAR(10) NOT NULL,\n         os_version VARCHAR(10) NOT NULL,  \n         start_time VARCHAR(30) NOT NULL,\n         end_time VARCHAR(30) NOT NULL,\n         duration int )&quot;&quot;&quot;\n\ncursor.execute(sql)#执行sql语句\n\n#通过行来读取\nwith open(&quot;file&quot;,&quot;r&quot;)as f:\n    while 1:\n        line = f.readline()\n        if not line:\n            break\n        line = line.strip(&quot;\\n&quot;)\n        # 下面接方法\n\n#写入数据\n#同样通过编写sql语句执行\n#sql语句实例\nsql = &quot;insert into log(device_id,os,os_version,start_time,end_time,duration)values(&#039;%s&#039;, &#039;%s&#039;,&#039;%s&#039;, &#039;%s&#039;,&#039;%s&#039;,%d)&quot;%(tags[0],tags[1],tags[2],tags[3],tags[4],int(tags[5]))\n\n#关闭数据库\ndb.close()\n</code></pre><p>对于字符串values要写成&#39;%S&#39;,不然sql语句不符合语法</p>\n<pre class=\"prettyprint language-python\"><code>#获取异常\nimport traceback\ntry:\n\n　　...\n\nexcept Exception, e:\n    print(str(e))\n　　...</code></pre>"},{"context":[{"title":"Python","link":"javascript:void(0)"},{"title":"Python入门","link":"/python/p0.html"}],"content":"\n        <h2 id=\"编码规范\">\n            <a href='#编码规范' class='header-anchor'>#</a>\n            <span>编码规范</span>\n        </h2>\n    <ol>\n<li>三引号文档注释</li>\n<li>小括号元组，不可被更改</li>\n<li>set集合元素不能重复{}</li>\n</ol>\n\n        <h3 id=\"变量与数据类型\">\n            <a href='#变量与数据类型' class='header-anchor'>#</a>\n            <span>变量与数据类型</span>\n        </h3>\n    <ol>\n<li>没有自增自减</li>\n<li>in和not in</li>\n<li>id()</li>\n<li>is</li>\n</ol>\n\n        <h3 id=\"IO\">\n            <a href='#IO' class='header-anchor'>#</a>\n            <span>IO</span>\n        </h3>\n    <ol>\n<li><p>input()</p>\n</li>\n<li><p>占位符</p>\n<pre class=\"prettyprint language-python\"><code>print(&quot;a is {},{}&quot;.format(a,a))</code></pre></li>\n<li><p>默认输入类型为字符串，需要用eval进行强制类型转换</p>\n</li>\n</ol>\n\n        <h3 id=\"list\">\n            <a href='#list' class='header-anchor'>#</a>\n            <span>list</span>\n        </h3>\n    <ol>\n<li>切片读取[lower:upper:step]</li>\n<li>[-1]为最后一个元素</li>\n</ol>\n\n        <h3 id=\"dict\">\n            <a href='#dict' class='header-anchor'>#</a>\n            <span>dict</span>\n        </h3>\n    <ol>\n<li>直接添加</li>\n<li>查看的时候直接访问和get有异常处理</li>\n</ol>\n\n        <h3 id=\"循环\">\n            <a href='#循环' class='header-anchor'>#</a>\n            <span>循环</span>\n        </h3>\n    <ol>\n<li>range(x,y)生成一个从x到y-1的序列，不占用内存</li>\n<li>range(start,stop,step)</li>\n<li>while需要自己控制</li>\n<li>可以通过list(range(x,y))快速建立序列列表</li>\n</ol>\n"},{"context":[{"title":"Python","link":"javascript:void(0)"},{"title":"Python基础","link":"/python/p1.html"}],"content":"<p>[TOC]</p>\n\n        <h2 id=\"while&&for\">\n            <a href='#while&&for' class='header-anchor'>#</a>\n            <span>while&amp;&amp;for</span>\n        </h2>\n    <p>In Python, <code>else</code> can also be paired with a loop structure. Statements in <code>else</code> will be called if the <code>loop</code> finish without <code>break</code>.</p>\n<pre class=\"prettyprint language-python\"><code>while condition:\n    statements_1\nelse:\n    statments_2\n\n# For loop\nfor item in sequence:\n    statments_1\nelse:\n    statments_2</code></pre><p><strong>The else clause executes when the loop completes normally. This means that the loop did not encounter any break.</strong></p>\n<p>There are two scenarios in which the loop may end. The first one is when the item is found and break is encountered. The second scenario is that the loop ends. Now we may want to know which one of these is the reason for a loops completion. One method is to set a flag and then check it once the loop ends. Another is to use the else clause.</p>\n\n        <h2 id=\"Comprehension\">\n            <a href='#Comprehension' class='header-anchor'>#</a>\n            <span>Comprehension</span>\n        </h2>\n    \n        <h3 id=\"list-comprehension\">\n            <a href='#list-comprehension' class='header-anchor'>#</a>\n            <span>list comprehension</span>\n        </h3>\n    <pre class=\"prettyprint language-python\"><code># nested loop can be written in this way\ncells = [(r, c) for r in rows for c in cols]</code></pre><pre class=\"prettyprint language-python\"><code># initialize a 5 * 5 zero matrix by list comprehension\n\n[[0] * 5 for x in range(5)]\n[[0 for x in range(5)] for x in range(5)]\n\n#The basic syntax is\n#[expression for item in list if conditional]\n# 输出值/表达式 </code></pre>\n        <h3 id=\"Dictionary-comprehension\">\n            <a href='#Dictionary-comprehension' class='header-anchor'>#</a>\n            <span>Dictionary comprehension</span>\n        </h3>\n    <p>The basic form is:</p>\n<pre class=\"prettyprint language-python\"><code>#{key_expression : value_expression for expression in iterable}\n# Count number of each base in the dna sequence\ndna = &#039;ACCCGAATTAGT&#039;\ndna_cnt = {b: dna.count(b) for b in set(dna)}\ndna_cnt</code></pre>\n        <h3 id=\"Set-comprehension\">\n            <a href='#Set-comprehension' class='header-anchor'>#</a>\n            <span>Set comprehension</span>\n        </h3>\n    <p>Also, you may do set comprehension in the following way:</p>\n<pre class=\"prettyprint language-python\"><code>#{expression for expression in iterable}</code></pre>\n        <h2 id=\"Function\">\n            <a href='#Function' class='header-anchor'>#</a>\n            <span>Function</span>\n        </h2>\n    \n        <h3 id=\"参数\">\n            <a href='#参数' class='header-anchor'>#</a>\n            <span>参数</span>\n        </h3>\n    <ol>\n<li><p>用*表示列表参数</p>\n</li>\n<li><p>用**表示字典参数</p>\n</li>\n<li><p>列表参数一定要放到字典参数的前面</p>\n</li>\n<li><p>函数也可以用函数名作为参数</p>\n</li>\n<li><p>可以指定参数和返回值类型</p>\n<pre class=\"prettyprint language-python\"><code>def greet(name:str)-&amp;gt;str:\n    print(&quot;hello &quot;+name)</code></pre></li>\n</ol>\n\n        <h3 id=\"docstrings\">\n            <a href='#docstrings' class='header-anchor'>#</a>\n            <span>docstrings</span>\n        </h3>\n    <pre class=\"prettyprint language-python\"><code>&#039;&#039;&#039;\n\n这是一个说明文档，通过这种格式来写帮助\n\n&#039;&#039;&#039;</code></pre>\n        <h3 id=\"lambda\">\n            <a href='#lambda' class='header-anchor'>#</a>\n            <span>lambda</span>\n        </h3>\n    <p>lambda定义了一个没有函数名的函数，冒号左边是参数，右边是返回值，多用于数学计算和不常用的函数，为了让代码清晰易读，写成lambda的格式。</p>\n\n        <h3 id=\"map、reduce、filter\">\n            <a href='#map、reduce、filter' class='header-anchor'>#</a>\n            <span>map、reduce、filter</span>\n        </h3>\n    <p>map是对元素进行映射，reduce是通过一些方法将值归并，filter是对值进行一些筛选，在python3.8版本中已经没有reduce方法，需要从functools包中导入。</p>\n<p>在使用map和filter时，注意将最后的输出类型进行转化。默认为map和filter类型。</p>\n<pre class=\"prettyprint\"><code>mylist = [1,2,3,4,5,6,7,8]\nnew_list = list(filter(lambda x:x%2==0,mylist))\nreduce(lambda x,y:x+y,mylist)\nnew_list = list(map(lambada x:x**2,mylist))</code></pre>\n        <h2 id=\"Exception\">\n            <a href='#Exception' class='header-anchor'>#</a>\n            <span>Exception</span>\n        </h2>\n    "},{"context":[{"title":"Python","link":"javascript:void(0)"},{"title":"python进阶","link":"/python/p2.html"}],"content":"\n        <h1 id=\"python进阶\">\n            <a href='#python进阶' class='header-anchor'>#</a>\n            <span>python进阶</span>\n        </h1>\n    "},{"context":[{"title":"Python","link":"javascript:void(0)"},{"title":"python算法","link":"/python/p3.html"}],"content":"\n        <h1 id=\"python算法\">\n            <a href='#python算法' class='header-anchor'>#</a>\n            <span>python算法</span>\n        </h1>\n    "},{"context":[{"title":"Python","link":"javascript:void(0)"},{"title":"Python爬虫","link":"javascript:void(0)"},{"title":"python爬虫基础","link":"/python/p3.html"}],"content":"\n        <h1 id=\"python算法\">\n            <a href='#python算法' class='header-anchor'>#</a>\n            <span>python算法</span>\n        </h1>\n    "},{"context":[{"title":"Python","link":"javascript:void(0)"},{"title":"Python爬虫","link":"javascript:void(0)"},{"title":"python爬虫进阶","link":"/python/p5.html"}],"content":"<p>[TOC]</p>\n\n        <h3 id=\"xpath\">\n            <a href='#xpath' class='header-anchor'>#</a>\n            <span>xpath</span>\n        </h3>\n    <p>xpath**通过对html页面进行树形解析对页面元素进行分析</p>\n<pre class=\"prettyprint language-python\"><code>import requests\nimport lxml\nheaders = {\n        &quot;User-Agent&quot;: &quot;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 &quot;\n                      &quot;(KHTML, like Gecko) Chrome/51.0.2704.63 Safari/537.36&quot;\n    }\nurl = &quot;http://go.hao123.com&quot;\nres= requests.get(url,headers=headers)\nhtml = lxml.etree.HTML(res.text)\ncc = html.xpath(&quot;/html/body/div[3]/div/div[4]/div[2]/div[1]/div[1]/a[1]/span[1]/text()&quot;)\n#text()取文本\nprice = html.xpath(&quot;/html/body/div[3]/div/div[4]/div[2]/div[1]/div[1]/a[1]/@alog-text&quot;)\n#@取属性\nprint(cc[0])</code></pre><p><img src=\"C:\\Users\\weizelin\\AppData\\Roaming\\Typora\\typora-user-images\\1562742892432.png\" alt=\"1562742892432\"></p>\n<pre class=\"prettyprint language-python\"><code>import requests\nimport lxml\nheaders = {\n        &quot;User-Agent&quot;: &quot;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 &quot;\n                      &quot;(KHTML, like Gecko) Chrome/51.0.2704.63 Safari/537.36&quot;\n    }\nurl = &quot;http://go.hao123.com&quot;\nres= requests.get(url,headers=headers)\nhtml = lxml.etree.HTML(res.text)\n#先找到特价机票的位置\ntejia =html.xpath(&quot;//div[@class=&#039;tejia-air-wrapper&#039;]&quot;)\n\n#分割为十个城市的具体内容\ntejias =tejia[0].xpath(&quot;.//div[@class=&#039;tejia-air&#039;]&quot;)\n\n\n#对每个城市进行处理\nfor tj in tejias:\n    # 搜索出所有的目的地\n    aa = tj.xpath(&quot;.//a[@class=&#039;flight&#039;]&quot;)\n    for a in aa:\n        fromto = a.xpath(&quot;./@alog-text&quot;)        #起始地点和到达地点\n        price = a.xpath(&quot;.//span[@class =&#039;tickets-price&#039;]/text()&quot;)    #价格\n        print(fromto,price)</code></pre>\n        <h3 id=\"Beautifulsoup\">\n            <a href='#Beautifulsoup' class='header-anchor'>#</a>\n            <span>Beautifulsoup</span>\n        </h3>\n    <p>找属性有两种方法</p>\n<ol>\n<li>soup.a[&#39;href&#39;]</li>\n<li>soup.a.attrs[&#39;href&#39;]<br>找文本直接.text</li>\n</ol>\n<p>查找有两个函数，find()和find_all()<br>有两个参数，一个是类别，一个是属性的键值对<br>soup.find(&#39;a&#39;,{&#39;id&#39;:&#39;link2&#39;})</p>\n<p>默认返回的是查找到的第一个内容</p>\n<p>BeautifulSoup也是先将html转化成树型结构，不同与xpath的是它通过标签来筛选内容而非层级。</p>\n"},{"context":[{"title":"Python","link":"javascript:void(0)"},{"title":"Python爬虫","link":"javascript:void(0)"},{"title":"python反爬虫","link":"/python/p6.html"}],"content":"\n        <h1 id=\"反爬虫\">\n            <a href='#反爬虫' class='header-anchor'>#</a>\n            <span>反爬虫</span>\n        </h1>\n    <ol>\n<li><p>使用用户代理池，休眠随机时间</p>\n</li>\n<li><p>使用IP代理池 </p>\n</li>\n<li><p>selenium</p>\n<p>如果无需登陆，则可以通过更换IP及使用IP代理池来避免爬虫被禁止；如果需要登陆，则可以使用用户代理池；对于动态加载页面既可以通过selenium来实现，也可以通过json、api来实现。需要注意的是异步的网页要注意请求的headers中的一些特殊要求。</p>\n</li>\n</ol>\n<hr>\n<p>[TOC]</p>\n<hr>\n\n        <h3 id=\"selenium\">\n            <a href='#selenium' class='header-anchor'>#</a>\n            <span>selenium</span>\n        </h3>\n    \n        <h4 id=\"1.-安装selenium\">\n            <a href='#1.-安装selenium' class='header-anchor'>#</a>\n            <span>1. 安装selenium</span>\n        </h4>\n    <pre class=\"prettyprint language-linux\"><code>pip install selenium</code></pre>\n        <h4 id=\"2.安装chromdriver\">\n            <a href='#2.安装chromdriver' class='header-anchor'>#</a>\n            <span>2.安装chromdriver</span>\n        </h4>\n    <p><a href=\"https://blog.csdn.net/huilan_same/article/details/51896672\">对应chromedriver与chrome的对应关系表</a></p>\n<p>或者查看自己的chrome版本后直接到chromedriver镜像站往下拉下载版本号开头的文件</p>\n<p><a href=\"http://chromedriver.storage.googleapis.com/index.html\">http://chromedriver.storage.googleapis.com/index.html</a></p>\n<p>（比如我的是75，下载任意一个都可以）</p>\n<p><img src=\"C:\\Users\\weizelin\\AppData\\Roaming\\Typora\\typora-user-images\\1562993614559.png\" alt=\"1562993614559\"></p>\n<p>下载完将chromdriver.exe复制到chrome/application的目录下，并将该目录设置为环境变量</p>\n\n        <h4 id=\"3.完成\">\n            <a href='#3.完成' class='header-anchor'>#</a>\n            <span>3.完成</span>\n        </h4>\n    "},{"context":[{"title":"Python","link":"javascript:void(0)"},{"title":"Scrapy","link":"javascript:void(0)"},{"title":"css选择器","link":"/python/css.html"}],"content":"\n        <h2 id=\"页面解析工具\">\n            <a href='#页面解析工具' class='header-anchor'>#</a>\n            <span>页面解析工具</span>\n        </h2>\n    <ol>\n<li>Xpath</li>\n<li>css选择器</li>\n<li>beautifulsoup</li>\n<li>re</li>\n<li>pyquery</li>\n</ol>\n\n        <h2 id=\"CSS选择器\">\n            <a href='#CSS选择器' class='header-anchor'>#</a>\n            <span>CSS选择器</span>\n        </h2>\n    <ul>\n<li>什么前缀都没有是标签  css.(&quot;div&quot;)</li>\n<li>前缀是“.”的是class css.(&quot;.right&quot;)</li>\n<li>前缀是&quot;#&quot;代表id</li>\n</ul>\n<ul>\n<li><p>A,B代表A或B</p>\n</li>\n<li><p>A B 代表后代选择器（所有子代）</p>\n<p><img src=\"https://img-blog.csdn.net/20141116113945625?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMjExMDcxOQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"img\"></p>\n</li>\n<li><p>A&gt;B 代表所有A中的B 子代选择器（直接子代）</p>\n<p>​    <img src=\"https://img-blog.csdn.net/20141116114618500?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMjExMDcxOQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"img\"></p>\n</li>\n<li><p>A+B 所有和A紧邻的B</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"left\">选择器</th>\n<th align=\"left\">例子</th>\n<th align=\"left\">例子描述</th>\n<th align=\"left\">CSS</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\"><a href=\"http://www.w3school.com.cn/cssref/selector_class.asp\">.<em>class</em></a></td>\n<td align=\"left\">.intro</td>\n<td align=\"left\">选择 class=&quot;intro&quot; 的所有元素。</td>\n<td align=\"left\">1</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"http://www.w3school.com.cn/cssref/selector_id.asp\">#<em>id</em></a></td>\n<td align=\"left\">#firstname</td>\n<td align=\"left\">选择 id=&quot;firstname&quot; 的所有元素。</td>\n<td align=\"left\">1</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"http://www.w3school.com.cn/cssref/selector_all.asp\">*</a></td>\n<td align=\"left\">*</td>\n<td align=\"left\">选择所有元素。</td>\n<td align=\"left\">2</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"http://www.w3school.com.cn/cssref/selector_element.asp\"><em>element</em></a></td>\n<td align=\"left\">p</td>\n<td align=\"left\">选择所有 <p> 元素。</td>\n<td align=\"left\">1</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"http://www.w3school.com.cn/cssref/selector_element_comma.asp\"><em>element</em>,<em>element</em></a></td>\n<td align=\"left\">div,p</td>\n<td align=\"left\">选择所有 <div> 元素和所有 <p> 元素。</td>\n<td align=\"left\">1</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"http://www.w3school.com.cn/cssref/selector_element_element.asp\"><em>element</em> <em>element</em></a></td>\n<td align=\"left\">div p</td>\n<td align=\"left\">选择 <div> 元素内部的所有 <p> 元素。</td>\n<td align=\"left\">1</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"http://www.w3school.com.cn/cssref/selector_element_gt.asp\"><em>element</em>&gt;<em>element</em></a></td>\n<td align=\"left\">div&gt;p</td>\n<td align=\"left\">选择父元素为 <div> 元素的所有 <p> 元素。</td>\n<td align=\"left\">2</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"http://www.w3school.com.cn/cssref/selector_element_plus.asp\"><em>element</em>+<em>element</em></a></td>\n<td align=\"left\">div+p</td>\n<td align=\"left\">选择紧接在 <div> 元素之后的所有 <p> 元素。</td>\n<td align=\"left\">2</td>\n</tr>\n<tr>\n<td align=\"left\"><strong><a href=\"http://www.w3school.com.cn/cssref/selector_attribute.asp\">[<em>attribute</em>]</a></strong></td>\n<td align=\"left\"><strong>[target]</strong></td>\n<td align=\"left\"><strong>选择带有 target 属性所有元素。</strong></td>\n<td align=\"left\"><strong>2</strong></td>\n</tr>\n<tr>\n<td align=\"left\"><strong><a href=\"http://www.w3school.com.cn/cssref/selector_attribute_value.asp\">[<em>attribute</em>=<em>value</em>]</a></strong></td>\n<td align=\"left\"><strong>[target=_blank]</strong></td>\n<td align=\"left\"><strong>选择 target=&quot;_blank&quot; 的所有元素。</strong></td>\n<td align=\"left\"><strong>2</strong></td>\n</tr>\n<tr>\n<td align=\"left\"><strong><a href=\"http://www.w3school.com.cn/cssref/selector_attribute_value_contain.asp\">[<em>attribute</em>~=<em>value</em>]</a></strong></td>\n<td align=\"left\"><strong>[title~=flower]</strong></td>\n<td align=\"left\"><strong>选择 title 属性包含单词 &quot;flower&quot; 的所有元素。</strong></td>\n<td align=\"left\"><strong>2</strong></td>\n</tr>\n<tr>\n<td align=\"left\"><strong><a href=\"http://www.w3school.com.cn/cssref/selector_attribute_value_start.asp\">[<em>attribute</em>|=<em>value</em>]</a></strong></td>\n<td align=\"left\"><strong>[lang|=en]</strong></td>\n<td align=\"left\"><strong>选择 lang 属性值以 &quot;en&quot; 开头的所有元素。</strong></td>\n<td align=\"left\"><strong>2</strong></td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"http://www.w3school.com.cn/cssref/selector_link.asp\">:link</a></td>\n<td align=\"left\">a:link</td>\n<td align=\"left\">选择所有未被访问的链接。</td>\n<td align=\"left\">1</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"http://www.w3school.com.cn/cssref/selector_visited.asp\">:visited</a></td>\n<td align=\"left\">a:visited</td>\n<td align=\"left\">选择所有已被访问的链接。</td>\n<td align=\"left\">1</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"http://www.w3school.com.cn/cssref/selector_active.asp\">:active</a></td>\n<td align=\"left\">a:active</td>\n<td align=\"left\">选择活动链接。</td>\n<td align=\"left\">1</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"http://www.w3school.com.cn/cssref/selector_hover.asp\">:hover</a></td>\n<td align=\"left\">a:hover</td>\n<td align=\"left\">选择鼠标指针位于其上的链接。</td>\n<td align=\"left\">1</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"http://www.w3school.com.cn/cssref/selector_focus.asp\">:focus</a></td>\n<td align=\"left\">input:focus</td>\n<td align=\"left\">选择获得焦点的 input 元素。</td>\n<td align=\"left\">2</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"http://www.w3school.com.cn/cssref/selector_first-letter.asp\">:first-letter</a></td>\n<td align=\"left\">p:first-letter</td>\n<td align=\"left\">选择每个 <p> 元素的首字母。</td>\n<td align=\"left\">1</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"http://www.w3school.com.cn/cssref/selector_first-line.asp\">:first-line</a></td>\n<td align=\"left\">p:first-line</td>\n<td align=\"left\">选择每个 <p> 元素的首行。</td>\n<td align=\"left\">1</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"http://www.w3school.com.cn/cssref/selector_first-child.asp\">:first-child</a></td>\n<td align=\"left\">p:first-child</td>\n<td align=\"left\">选择属于父元素的第一个子元素的每个 <p> 元素。</td>\n<td align=\"left\">2</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"http://www.w3school.com.cn/cssref/selector_before.asp\">:before</a></td>\n<td align=\"left\">p:before</td>\n<td align=\"left\">在每个 <p> 元素的内容之前插入内容。</td>\n<td align=\"left\">2</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"http://www.w3school.com.cn/cssref/selector_after.asp\">:after</a></td>\n<td align=\"left\">p:after</td>\n<td align=\"left\">在每个 <p> 元素的内容之后插入内容。</td>\n<td align=\"left\">2</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"http://www.w3school.com.cn/cssref/selector_lang.asp\">:lang(<em>language</em>)</a></td>\n<td align=\"left\">p:lang(it)</td>\n<td align=\"left\">选择带有以 &quot;it&quot; 开头的 lang 属性值的每个 <p> 元素。</td>\n<td align=\"left\">2</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"http://www.w3school.com.cn/cssref/selector_gen_sibling.asp\"><em>element1</em>~<em>element2</em></a></td>\n<td align=\"left\">p~ul</td>\n<td align=\"left\">选择前面有 <p> 元素的每个 <ul> 元素。</td>\n<td align=\"left\">3</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"http://www.w3school.com.cn/cssref/selector_attr_begin.asp\">[<em>attribute</em>^=<em>value</em>]</a></td>\n<td align=\"left\">a[src^=&quot;https&quot;]</td>\n<td align=\"left\">选择其 src 属性值以 &quot;https&quot; 开头的每个 <a> 元素。</td>\n<td align=\"left\">3</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"http://www.w3school.com.cn/cssref/selector_attr_end.asp\">[<em>attribute</em>$=<em>value</em>]</a></td>\n<td align=\"left\">a[src$=&quot;.pdf&quot;]</td>\n<td align=\"left\">选择其 src 属性以 &quot;.pdf&quot; 结尾的所有 <a> 元素。</td>\n<td align=\"left\">3</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"http://www.w3school.com.cn/cssref/selector_attr_contain.asp\">[<em>attribute**=</em>value*]</a></td>\n<td align=\"left\">a[src*=&quot;abc&quot;]</td>\n<td align=\"left\">选择其 src 属性中包含 &quot;abc&quot; 子串的每个 <a> 元素。</td>\n<td align=\"left\">3</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"http://www.w3school.com.cn/cssref/selector_first-of-type.asp\">:first-of-type</a></td>\n<td align=\"left\">p:first-of-type</td>\n<td align=\"left\">选择属于其父元素的首个 <p> 元素的每个 <p> 元素。</td>\n<td align=\"left\">3</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"http://www.w3school.com.cn/cssref/selector_last-of-type.asp\">:last-of-type</a></td>\n<td align=\"left\">p:last-of-type</td>\n<td align=\"left\">选择属于其父元素的最后 <p> 元素的每个 <p> 元素。</td>\n<td align=\"left\">3</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"http://www.w3school.com.cn/cssref/selector_only-of-type.asp\">:only-of-type</a></td>\n<td align=\"left\">p:only-of-type</td>\n<td align=\"left\">选择属于其父元素唯一的 <p> 元素的每个 <p> 元素。</td>\n<td align=\"left\">3</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"http://www.w3school.com.cn/cssref/selector_only-child.asp\">:only-child</a></td>\n<td align=\"left\">p:only-child</td>\n<td align=\"left\">选择属于其父元素的唯一子元素的每个 <p> 元素。</td>\n<td align=\"left\">3</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"http://www.w3school.com.cn/cssref/selector_nth-child.asp\">:nth-child(<em>n</em>)</a></td>\n<td align=\"left\">p:nth-child(2)</td>\n<td align=\"left\">选择属于其父元素的第二个子元素的每个 <p> 元素。</td>\n<td align=\"left\">3</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"http://www.w3school.com.cn/cssref/selector_nth-last-child.asp\">:nth-last-child(<em>n</em>)</a></td>\n<td align=\"left\">p:nth-last-child(2)</td>\n<td align=\"left\">同上，从最后一个子元素开始计数。</td>\n<td align=\"left\">3</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"http://www.w3school.com.cn/cssref/selector_nth-of-type.asp\">:nth-of-type(<em>n</em>)</a></td>\n<td align=\"left\">p:nth-of-type(2)</td>\n<td align=\"left\">选择属于其父元素第二个 <p> 元素的每个 <p> 元素。</td>\n<td align=\"left\">3</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"http://www.w3school.com.cn/cssref/selector_nth-last-of-type.asp\">:nth-last-of-type(<em>n</em>)</a></td>\n<td align=\"left\">p:nth-last-of-type(2)</td>\n<td align=\"left\">同上，但是从最后一个子元素开始计数。</td>\n<td align=\"left\">3</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"http://www.w3school.com.cn/cssref/selector_last-child.asp\">:last-child</a></td>\n<td align=\"left\">p:last-child</td>\n<td align=\"left\">选择属于其父元素最后一个子元素每个 <p> 元素。</td>\n<td align=\"left\">3</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"http://www.w3school.com.cn/cssref/selector_root.asp\">:root</a></td>\n<td align=\"left\">:root</td>\n<td align=\"left\">选择文档的根元素。</td>\n<td align=\"left\">3</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"http://www.w3school.com.cn/cssref/selector_empty.asp\">:empty</a></td>\n<td align=\"left\">p:empty</td>\n<td align=\"left\">选择没有子元素的每个 <p> 元素（包括文本节点）。</td>\n<td align=\"left\">3</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"http://www.w3school.com.cn/cssref/selector_target.asp\">:target</a></td>\n<td align=\"left\">#news:target</td>\n<td align=\"left\">选择当前活动的 #news 元素。</td>\n<td align=\"left\">3</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"http://www.w3school.com.cn/cssref/selector_enabled.asp\">:enabled</a></td>\n<td align=\"left\">input:enabled</td>\n<td align=\"left\">选择每个启用的 <input> 元素。</td>\n<td align=\"left\">3</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"http://www.w3school.com.cn/cssref/selector_disabled.asp\">:disabled</a></td>\n<td align=\"left\">input:disabled</td>\n<td align=\"left\">选择每个禁用的 <input> 元素</td>\n<td align=\"left\">3</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"http://www.w3school.com.cn/cssref/selector_checked.asp\">:checked</a></td>\n<td align=\"left\">input:checked</td>\n<td align=\"left\">选择每个被选中的 <input> 元素。</td>\n<td align=\"left\">3</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"http://www.w3school.com.cn/cssref/selector_not.asp\">:not(<em>selector</em>)</a></td>\n<td align=\"left\">:not(p)</td>\n<td align=\"left\">选择非 <p> 元素的每个元素。</td>\n<td align=\"left\">3</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"http://www.w3school.com.cn/cssref/selector_selection.asp\">::selection</a></td>\n<td align=\"left\">::selection</td>\n<td align=\"left\">选择被用户选取的元素部分。</td>\n<td align=\"left\">3</td>\n</tr>\n</tbody></table>\n<p>不存在div.class这样的操作</p>\n"},{"context":[{"title":"大数据","link":"javascript:void(0)"},{"title":"Hadoop","link":"/Hadoop01.html"}],"content":"<p>MapReduce——&quot;分而治之&quot;</p>\n<p>相互之间不具有依赖关系</p>\n<p> 大数据往往是一组重复的数据元素</p>\n<hr>\n\n        <h2 id=\"mapreduce的主要功能\">\n            <a href='#mapreduce的主要功能' class='header-anchor'>#</a>\n            <span>mapreduce的主要功能</span>\n        </h2>\n    <p>客户端，编写mapreduce作业，配置和提交作业</p>\n<p>jobTracker 初始化作业分配作业，通信，协调</p>\n<p>tasktracker </p>\n<ol>\n<li>数据划分和计算任务调度<ul>\n<li>job -&gt; task分成多个数据块</li>\n<li>task -&gt; map and reduce </li>\n</ul>\n</li>\n<li><p>数据代码互定位</p>\n<ul>\n<li>尽可能靠近本地磁盘</li>\n<li>网络节点同样采取就近原则</li>\n</ul>\n</li>\n<li><p>系统优化：</p>\n<p>实现负载均衡</p>\n<p>数据合并减少数据传输压力</p>\n<p>性能均衡</p>\n</li>\n<li><p>出错检测和恢复（多备份）</p>\n</li>\n</ol>\n<hr>\n\n        <h2 id=\"运行详解\">\n            <a href='#运行详解' class='header-anchor'>#</a>\n            <span>运行详解</span>\n        </h2>\n    <ol>\n<li>客户端编写mapreduce</li>\n<li>提交job到jobtracker</li>\n<li>分配job的ID，检查输出目录是否存在，根据输入计算输入分片</li>\n<li>JobTracker配置Job需要的资源</li>\n<li>Job Tracker初始化作业，排队</li>\n<li>初始化job，创建job对象，以便Tracker追踪Job的工作状态</li>\n<li>作业调度器获取输入分片信息创建一个map任务</li>\n<li>TaskTracker运行一个五秒的心跳机制，以便JobTracker检测TaskTracker是否存活</li>\n<li>TaskTracker分片执行任务，同时向JobTracker汇报工作</li>\n<li>当JobTracker收到最后一个TaskTracker工作完成，就设置job工作完成</li>\n<li>如果job中途犯错，会有相应的机制处理，</li>\n</ol>\n<hr>\n<p>MR运行阶段</p>\n<ol>\n<li><p>输入分片，在进行map计算时，把文件分片，输入分片并非数据本身，而是数据的起始位置和数据的长度</p>\n<p>（如果每个map执行行的数据大小不均匀，mapreduce会对其进行优化）</p>\n</li>\n<li><p>执行map函数，由编程人员实现</p>\n</li>\n<li><p>map的输出为reduce的输入</p>\n</li>\n<li><p>combiner是可选的一个阶段，combiner是一个本地的reduce操作，它是map运算的后续步骤，可以使得map的输出文件变小（但是使用combiner是有风险的， 如果求最大最小和总数可以使用combiner，但求和的话可能就会出错）</p>\n</li>\n<li><p>shuffle阶段：将map的输出作为reduce的输入的过程（防止内存溢出）</p>\n<p>无法将大量数据放入内存，shuffle设置一个缓存区，如果缓存达到阈值内容就会被写到磁盘上，写的过程叫spill，另外的内存继续写入数据。如果缓存被撑满，会先写内容，内容写完后继续再读入内存。</p>\n<p>溢出文件随后会被合并</p>\n<p><strong>接下来还有一个过程——Partitioner（分区）</strong></p>\n</li>\n<li><p>reduce阶段</p>\n</li>\n</ol>\n<p>·</p>\n"},{"context":[{"title":"Linux","link":"javascript:void(0)"},{"title":"Linux基础","link":"/linux01.html"}],"content":"\n        <h2 id=\"三种网络模式\">\n            <a href='#三种网络模式' class='header-anchor'>#</a>\n            <span>三种网络模式</span>\n        </h2>\n    <p>net模式：xshell倾向于连接独立的ip，而net是网络共享模式，和主机ip捆绑</p>\n<p>host-only模式：虚拟机和主机构建了局域网，但是外界电脑无法连接到虚拟机的ip</p>\n<p>桥接模式</p>\n<hr>\n\n        <h2 id=\"一些基本指令\">\n            <a href='#一些基本指令' class='header-anchor'>#</a>\n            <span>一些基本指令</span>\n        </h2>\n    <pre class=\"prettyprint\"><code>tree -L 2\nls -a \nls -r\nls -ar\ntouch day{1..2}{a..d}.txt\nmkdir -p a/b/c/d    //支持递归构建\ncp 1.txt ./C/c\ncp -r a c    //复制目录\nrm -i 1.txt\n//?匹配任意单个字符，*匹配任意多个字符</code></pre><p>查看文件内容</p>\n<pre class=\"prettyprint language-shell\"><code>cat 1.txt\ncat &amp;gt; 1.txt\ncat &amp;gt;&amp;gt; 1.txt //追加\nmore 1.txt\nless 1.txt //空格一页，回车一行，可上下移动\nhead 1.txt //默认前十行\nhead -20 1.txt\ntail 1.txt</code></pre><p>链接/快捷方式  软链接和硬链接</p>\n<pre class=\"prettyprint language-shell\"><code>ln -s 1.txt ooo\nln 1.txt ppp\nstat 1.txt//查看文件的状态\n//ln是硬链接 硬链接添加，硬连接数加一，删除减一不影响访问\n//软链接删除源文件则无法访问</code></pre><pre class=\"prettyprint language-shell\"><code>du 1.txt -h\ndf -h\nwhich cp\necho $path    //查看环境变量</code></pre><pre class=\"prettyprint\"><code>who am i\nchmod +x 1.txt\nchmod -x 1.txt\n/*-文件\n  d目录    r    w    x        u    g        o\n每三个一组，读、写、执行，对用户，对组，对其它用户\n*/\nchmod ug+x 1.txt\numask 0002（缺省值）</code></pre><p>0 没有权限</p>\n<p>1 执行权限</p>\n<p>2 写权限</p>\n<p>4 读权限 </p>\n<pre class=\"prettyprint language-shell\"><code>sudo chown weizelin 1.txt//切换主用户\nsudo chgrp weizelin 2.txt//切换组用户\nsudo adduser ziwei\nsu ziwei\ndeluser ziwei\nuserdel -r ziwei\n修改root密码 sudo passwd root\nsudo visudo</code></pre><pre class=\"prettyprint language-shell\"><code>find ~/nh/ -name 1.txt\nfind ~/nh/ -size 10k\nfind ~/nh/ -size -10M\nfind ~/nh/ -size +10M\nfind ~/nh/ -size -10M -size +10k\n\ngrep -r &quot;insert&quot; ~/nh/</code></pre><pre class=\"prettyprint language-shell\"><code>who //查看当前登陆进程\nps -a  //查看所有进程\nps -u\nps -x\nps -e</code></pre><hr>\n"},{"context":[{"title":"PHP","link":"javascript:void(0)"},{"title":"php基础","link":"/PHP01.html"}],"content":"\n        <h3 id=\"php入门\">\n            <a href='#php入门' class='header-anchor'>#</a>\n            <span>php入门</span>\n        </h3>\n    <p>[TOC]</p>\n<hr>\n<p>你可以在页面中编写PHP代码写在<code>&amp;lt;?php`</code>?&gt;<code>标签之间，但注意后面的</code>?&gt;`是可以省略的。</p>\n<p>在php中字符串<strong>连接符</strong>是用点（.）来表示的，这一点比较特殊，其它语言中是用加号（+）来表示的，比如：JavaScirpt、Asp、C。</p>\n<p>注意:连接符可以连接多个字符串，上面的例子就是把一个字符串拆分为二个小字符串，然后用一个连接符连起来。</p>\n<p>在PHP中也有注释语句：用双斜杠（//）来表示。其它语言中，Html中使用<!--注释语句-->，CSS中使用/<em>注释语句</em>/。</p>\n<p>注释语句可以在PHP程序的任意位置（但注释语句一定要写在<?php ?>之间）。</p>\n<p><br/>回车</p>\n<p>变量名必须通过<code>$</code>符号标识</p>\n<p>我们可以通过使用“memory_get_usage”获取当前PHP消耗的内存。</p>\n<p>八进制0123</p>\n<p>当你的字符串中包含引号的时候，可以单双引号交替，也可以使用转义字符。</p>\n<p>当双引号中包含变量时，变量会与双引号中的内容连接在一起；</p>\n<p>当单引号中包含变量时，变量会被当做字符串输出。</p>\n<p>在赋值符号后，输入定界符“&lt;&lt;&lt;”,接着是标识符，你可以用你的女神作为标识符“GOD”，如第2行，也可以使用你喜欢的狗狗，“DOG”作为标识符，但是，结尾处的标识符也必须是一样的。此外，在结尾的一行，如第7行，一定要另起一行，并且此行除了“GOD”，并以“；”号结束之外，不能有任何其他字符，前后都不能有，包括空格，否则会出现错误的哦。</p>\n<p>unset()变量被认为为NULL</p>\n<hr>\n"},{"context":[{"title":"其它","link":"javascript:void(0)"},{"title":"文档目录结构介绍","link":"/config/structure.html"}],"content":"\n        <h1 id=\"文档目录结构介绍\">\n            <a href='#文档目录结构介绍' class='header-anchor'>#</a>\n            <span>文档目录结构介绍</span>\n        </h1>\n    <pre class=\"prettyprint\"><code>testdocs\n├─ build  #这个是编译输出的目录\n│    ├─ config\n│    │    ├─ main.html\n│    │    ├─ nav.html\n│    │    └─ structure.html\n│    ├─ custom_theme.html\n│    ├─ data.js\n│    ├─ deploy.html\n│    ├─ index.html\n│    ├─ install.html\n│    ├─ quick_start.html\n│    ├─ static\n│    │    ├─ css\n│    │    ├─ font-awesome-4.7.0\n│    │    ├─ fonts\n│    │    ├─ images\n│    │    └─ js\n│    └─ template_markdown.html\n├─ docs #这个是文档的源文件目录，也就是markdown文件目录。\n│    ├─ config\n│    │    ├─ main.md\n│    │    ├─ nav.md\n│    │    └─ structure.md\n│    ├─ custom_theme.md\n│    ├─ deploy.md\n│    ├─ index.md\n│    ├─ install.md\n│    ├─ quick_start.md\n│    └─ template_markdown.md\n├─ static # 这个地方是用于存放文档中需要用要的静态文件，例如图片等，它会自动copy到build目录下。\n|\n├─ teadocs.config.js # 这是teadocs的主配置文件\n└─ tree.html # 这是文档的菜单配置文件</code></pre>"},{"context":[{"title":"其它","link":"javascript:void(0)"},{"title":"主配置文件说明","link":"/config/main.html"}],"content":"\n        <h1 id=\"主配置文件说明\">\n            <a href='#主配置文件说明' class='header-anchor'>#</a>\n            <span>主配置文件说明</span>\n        </h1>\n    <p>菜单的配置文件是你文档根目录下面的 <code>teadocs.config.js</code>，它是一个javascript的文件。</p>\n<p>主配置文件的所有配置项都不是必填你完全可以什么也不填写，它的代码如下：</p>\n<pre class=\"prettyprint language-javascript\"><code>&#039;use strict&#039;;\nconst path = require(&#039;path&#039;)\n\nmodule.exports = {\n    doc: {\n        name: &quot;&quot;, //文档名称\n        description: &quot;&quot;, //文档的描述\n        version: &quot;&quot;, //文档的版本\n        dir: &quot;&quot;, //文档的目录\n        outDir: &quot;&quot;, //文档编译成html时输出的目录\n        staticDir: &quot;&quot; //文档所用到的静态文件的地址\n    }, \n    theme: {\n        dir: &quot;&quot;, //主题的目录，可自定义主题\n        title: &quot;&quot;, //html的title标签\n        headHtml: &quot;&quot;, //html head 的代码\n        footHtml: &quot;&quot;, //html 底部 的代码\n        isMinify: true, //是否为输出的html启用压缩\n        rootPath: &quot;/&quot; //表示根路径，如果部署在深目录下面，这个配置项必填，不然会出现找不到资源路径的错误。\n    },\n    nav: {\n        tree: &quot;./tree&quot;\n    }\n}</code></pre>\n        <h2 id=\"默认配置\">\n            <a href='#默认配置' class='header-anchor'>#</a>\n            <span>默认配置</span>\n        </h2>\n    <pre class=\"prettyprint language-javascript\"><code>module.exports = {\n    doc: {\n        name: &quot;欢迎使用Teadocs文档生成系统&quot;,\n        description: &quot;欢迎使用Teadocs文档生成系统&quot;,\n        version: &quot;0.0.1&quot;,\n        dir: &quot;./docs&quot;,\n        outDir: &quot;./build&quot;,\n        staticDir: &quot;./static&quot;\n    },\n    theme: {\n        dir: __dirname + &#039;/../themes/default&#039;,\n        title: &quot;欢迎使用Teadocs文档生成系统&quot;,\n        headHtml: `\n        &amp;lt;meta name=&quot;description&quot; content=&quot;欢迎使用Teadocs文档生成系统&quot; /&amp;gt;\n        &amp;lt;meta name=&quot;keywords&quot; content=&quot;teadocs, 文档生成器&quot; /&amp;gt;\n        `,\n        footerHtml: &quot;&quot;,\n        isMinify: false,\n        rootPath: &quot;/&quot;\n    },\n    nav: {\n        tree: &quot;&amp;lt;ul&amp;gt;&amp;lt;li&amp;gt;&amp;lt;a&amp;gt;欢迎使用Teadocs文档生成系统&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&quot;\n    }\n}</code></pre>"},{"context":[{"title":"其它","link":"javascript:void(0)"},{"title":"菜单配置文件说明","link":"/config/nav.html"}],"content":"\n        <h1 id=\"菜单配置文件说明\">\n            <a href='#菜单配置文件说明' class='header-anchor'>#</a>\n            <span>菜单配置文件说明</span>\n        </h1>\n    <p>菜单的配置文件是你文档根目录下面的 <code>tree.md</code> 文件，它采用了markdown语法来进行书写。</p>\n\n        <h2 id=\"菜单结构\">\n            <a href='#菜单结构' class='header-anchor'>#</a>\n            <span>菜单结构</span>\n        </h2>\n    <p>例如，本文档的菜单结构如下：</p>\n<pre class=\"prettyprint language-markdown\"><code>- [介绍](/index)\n- [快速入门](/quick_start)\n- [安装](/install)\n- +配置介绍\n    - [文档目录结构介绍](/config/structure)\n    - [主配置文件说明](/config/main)\n    - [菜单配置文件说明](/config/nav)\n- [markdown模版](/template_markdown)\n- [自定义主题](/custom_theme)\n- [部署](/deploy)</code></pre>\n        <h3 id=\"符号介绍\">\n            <a href='#符号介绍' class='header-anchor'>#</a>\n            <span>符号介绍</span>\n        </h3>\n    <p>语法完全使用markdown里的无序列表定义语法，但是要特别注意以下几点：</p>\n<ul>\n<li><code>[]</code> 里的内容表示菜单的标题，如果不写<code>[]</code>则代表这个菜单没有链接仅作为一个菜单名称。</li>\n<li><code>()</code> 里的内容表示菜单的markdown文件的地址，<code>并且也代表了生成后的html文件url。</code></li>\n<li><code>+</code> 代表了在生成的html里默认展开这个菜单，需要注意的是，这不是markdown的语法，这是teadocs的规定，<code>+</code>一定要写在文本的前面，而不是<code>[</code>的前面。</li>\n</ul>\n"}];

    var escapeHtml = function (html) {
        let str = html;
        str = str.replace(/&/g, '&amp;');  
        str = str.replace(/</g, '&lt;');  
        str = str.replace(/>/g, '&gt;');
        str = str.replace(/"/g, '&quot;');
        str = str.replace(/'/g, '&#039;');  
        return str;
    }

    var clearHtml = function(html) {
        let str = html;
        str = str.replace(/&amp;/g, ''); 
        str = str.replace(/&lt;/g, ''); 
        str = str.replace(/&gt;/g, '');
        str = str.replace(/&quot;/g, '');
        str = str.replace(/&#039;/g, '');
        return str;
    }

    var randStr = function () {
        return Math.random().toString(36).substr(2);
    };

    var findTitle = function (ele) {
        var findPrevs = function (ele) {
            var children = $(ele).parent().children();
            var prevs = [];
            var findIt = false;
            children = Array.prototype.slice.call(children);
            children.forEach(function (subEle) {
                if ($(subEle).is($(ele))) {
                    findIt = true;
                }
                if (findIt === false && $(subEle).text() != "") {
                    prevs.push(subEle);
                }
            });
            return prevs;
        };

        var findH = function (eles) {
            var _eles = Array.prototype.slice.call(eles);
            _eles.reverse();
            var title = "";
            var id = "";
            _eles.forEach(function (item) {
                if (!title) {
                    if (item.nodeName[0] === "H") {
                        title = $(item).text();
                        id = $(item).attr("id");
                    }
                }
            });
            return {
                text: title,
                id: id
            };
        };
        var prevs = findPrevs(ele);
        if (prevs.length) {
            return findH(prevs);
        }
    };

    window.searchData = function (keyword) {
        var searchResult = [];
        content.forEach(function (item, index) {
            var tempHtml = "<div id='" + randStr() + "'></div>";
            var tempEle = $(tempHtml);
            var findArray = [];
            tempEle.html(clearHtml(item.content));
            findArray = tempEle.find(":contains('" + keyword + "')");
            findArray = Array.prototype.slice.call(findArray);
            if (findArray.length) {
                findArray.forEach(function (ele) {
                    var findContent = $(ele).text();
                    findContent = findContent[0] === "<" ? $(findContent).text() : findContent;
                    findContent = escapeHtml(findContent);
                    findContent = findContent.replace(new RegExp(keyword, 'g'), "<b>" + keyword + "</b>");
                    var hObj = findTitle(ele);
                    if (hObj) {
                        searchResult.push({
                            context: item.context,
                            title: hObj.text,
                            hid: hObj.id,
                            findContent: findContent
                        });
                    }
                });
            }
        });
        return searchResult;
    };
})();